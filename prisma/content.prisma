model Content {
  id           String      @id @default(uuid())
  title        String
  type         ContentType
  body         String?
  url          String?
  targetAgeMin Int?        @map("target_age_min")
  targetAgeMax Int?        @map("target_age_max")
  createdBy    String      @map("created_by")
  isPublished  Boolean     @default(false) @map("is_published")
  isDeleted    Boolean     @default(false) @map("is_deleted")
  createdAt    DateTime    @default(now()) @map("created_at")
  updatedAt    DateTime    @default(now()) @updatedAt @map("updated_at")

  author   User       @relation(fields: [createdBy], references: [id], onDelete: Cascade)
  progress Progress[]

  @@map("contents")
}

model Progress {
  id                String   @id @default(uuid())
  childId           String   @map("child_id")
  contentId         String?  @map("content_id")
  quizId            String?  @map("quiz_id")
  score             Int?
  completionPercent Int?     @map("completion_percent")
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @default(now()) @updatedAt @map("updated_at")

  child   ChildProfile @relation(fields: [childId], references: [id], onDelete: Cascade)
  content Content?     @relation(fields: [contentId], references: [id])
  quiz    Quiz?        @relation(fields: [quizId], references: [id])

  @@map("progress")
}
