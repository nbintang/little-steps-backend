model Quiz {
  id          String   @id @default(uuid())
  title       String
  description String?
  createdBy   String   @map("created_by")
  timeLimit   Int?     @map("time_limit")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")

  author    User       @relation(fields: [createdBy], references: [id], onDelete: Cascade)
  questions Question[]
  progress  Progress[]

  @@map("quizzes")
}

model Question {
  id           String   @id @default(uuid())
  quizId       String   @map("quiz_id")
  questionJson Json
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @default(now()) @updatedAt @map("updated_at")

  quiz    Quiz     @relation(fields: [quizId], references: [id], onDelete: Cascade)
  answers Answer[]

  @@map("questions")
}

model Answer {
  id          String   @id @default(uuid())
  questionId  String   @map("question_id")
  text        String
  imageAnswer String?  @map("image_answer")
  isCorrect   Boolean  @default(false) @map("is_correct")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")

  question Question @relation(fields: [questionId], references: [id], onDelete: Cascade)

  @@map("answers")
}

model Progress {
  id                String    @id @default(uuid())
  childId           String    @map("child_id")
  quizId            String    @map("quiz_id")
  score             Int?
  completionPercent Int?      @map("completion_percent")
  startedAt         DateTime  @default(now()) @map("started_at")
  submittedAt       DateTime? @map("submitted_at")

  quiz           Quiz             @relation(fields: [quizId], references: [id], onDelete: Cascade)
  child          ChildProfile     @relation(fields: [childId], references: [id], onDelete: Cascade)

  @@unique([quizId, childId])
  @@map("progress")
}
