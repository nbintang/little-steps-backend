model Quiz {
  id          String     @id @default(uuid())
  title       String
  description String?
  createdBy   String     @map("created_by")
  createdAt   DateTime   @default(now()) @map("created_at")
  updatedAt   DateTime   @default(now()) @updatedAt @map("updated_at")
  timeLimit   Int?       @map("time_limit")
  categoryId  String?    @map("category_id")
  rating      Float?     @default(0)
  progress    Progress[]
  questions   Question[]
  category    Category?  @relation(fields: [categoryId], references: [id])
  author      User       @relation(fields: [createdBy], references: [id], onDelete: Cascade)

  @@map("quizzes")
}

model Question {
  id           String   @id @default(uuid())
  quizId       String   @map("quiz_id")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @default(now()) @updatedAt @map("updated_at")
  questionJson Json   @map("question_json")
  answers      Answer[]
  quiz         Quiz     @relation(fields: [quizId], references: [id], onDelete: Cascade)

  @@map("questions")
}

model Answer {
  id          String   @id @default(uuid())
  questionId  String   @map("question_id")
  text        String
  isCorrect   Boolean  @default(false) @map("is_correct")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")
  imageAnswer String?  @map("image_answer")
  question    Question @relation(fields: [questionId], references: [id], onDelete: Cascade)

  @@map("answers")
}

model Progress {
  id                String       @id @default(uuid())
  childId           String       @map("child_id")
  quizId            String       @map("quiz_id")
  score             Int?
  completionPercent Int?         @map("completion_percent")
  startedAt         DateTime     @default(now()) @map("started_at")
  submittedAt       DateTime?    @map("submitted_at")
  child             ChildProfile @relation(fields: [childId], references: [id], onDelete: Cascade)
  quiz              Quiz         @relation(fields: [quizId], references: [id], onDelete: Cascade)

  @@unique([quizId, childId])
  @@map("progress")
}
